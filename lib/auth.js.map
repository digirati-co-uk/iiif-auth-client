{"version":3,"sources":["../auth.js"],"names":["imageServiceId","token","infoResponse","loadInfo","log","status","renderImage","info","degraded","loadImage","authService","imageService","tokenService","first","service","s","profile","PROFILE_TOKEN","openTokenService","tokenMessage","accessToken","withTokenInfoResponse","attemptImageWithToken","services","asArray","lastAttempted","requestedId","serviceToTry","PROFILE_EXTERNAL","success","PROFILE_KIOSK","kioskWindow","openContentProviderWindow","userInteractionWithContentProvider","PROFILE_CLICKTHROUGH","getContentProviderWindowFromModal","contentProviderWindow","PROFILE_LOGIN","showOutOfOptionsMessages","doAuthChain","MessageIdGenerator","PROFILE_LOGOUT","viewer","messages","window","addEventListener","receiveMessage","Promise","resolve","reject","request","XMLHttpRequest","open","setRequestHeader","onload","JSON","parse","response","statusText","e","message","onerror","send","init","imageQs","exec","location","search","sourceQs","replace","selectImage","loadSourceList","then","populateSourceList","sources","document","querySelector","innerText","infoJsonAnchor","getElementById","infoJsonUrl","href","sourceList","forEach","opt","createElement","value","image","id","label","appendChild","style","display","options","selectedIndex","reloadButton","sourcesUrl","destroy","OpenSeadragon","prefixUrl","tileSources","obj","constructor","Array","objOrArray","predicate","arr","filtered","filter","length","getOrigin","url","urlHolder","protocol","hostname","port","messageId","messageIds","serviceOrigin","next","tokenUrl","src","postMessageTimeout","setTimeout","event","origin","stringify","data","rejectValue","hasOwnProperty","poll","setInterval","closed","clearInterval","sanitise","allowHtml","cookieServiceUrl","hideModals","modal","onclick","win","header","description","confirmLabel","failureHeader","failureDescription","modals","querySelectorAll","m","el","text","logDiv","p","scrollTop","scrollHeight","console"],"mappings":"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","file":"auth.js","sourcesContent":["const PROFILE_LOGIN = 'http://iiif.io/api/auth/1/login'\nconst PROFILE_CLICKTHROUGH = 'http://iiif.io/api/auth/1/clickthrough'\nconst PROFILE_KIOSK = 'http://iiif.io/api/auth/1/kiosk'\nconst PROFILE_EXTERNAL = 'http://iiif.io/api/auth/1/external'\nconst PROFILE_TOKEN = 'http://iiif.io/api/auth/1/token'\nconst PROFILE_LOGOUT = 'http://iiif.io/api/auth/1/logout'\n\nlet viewer = null;   \nlet messages = {}\nwindow.addEventListener(\"message\", receiveMessage, false);\n\n// resolve returns { infoJson, status }\n// reject returns an error message\nfunction loadInfo(imageServiceId, token){\n    return new Promise((resolve, reject) => {\n        const request = new XMLHttpRequest();\n        request.open('GET', imageServiceId + \"/info.json\");\n        if(token){\n            request.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n        }\n        request.onload = function(){\n            try {\n                if(this.status === 200 || this.status === 401){\n                    resolve({\n                        info: JSON.parse(this.response),\n                        status: this.status,\n                        requestedId: imageServiceId\n                    });\n                } else {\n                    reject(this.status + \" \" + this.statusText);\n                } \n            } catch(e) {\n                reject(e.message);\n            }\n        };\n        request.onerror = function() {\n            reject(this.status + \" \" + this.statusText);\n        };        \n        request.send();\n    });\n}\n\nfunction init(){\n    const imageQs = /image=(.*)/g.exec(window.location.search);\n    const sourceQs = /sources=(.*)/g.exec(window.location.search);\n    if(imageQs && imageQs[1]){\n        let imageServiceId = imageQs[1].replace(/\\/info\\.json$/, '');\n        selectImage(imageServiceId);\n    } else if(sourceQs && sourceQs[1]) {\n        loadSourceList(sourceQs[1]).then(sources => {\n            populateSourceList(sources);\n        });\n    } else {\n        document.querySelector(\"h1\").innerText = \"(no image on query string)\";\n    }\n}\n\nfunction selectImage(imageServiceId){\n    document.querySelector(\"h1\").innerText = imageServiceId;\n    let infoJsonAnchor = document.getElementById(\"infoJson\");\n    let infoJsonUrl = imageServiceId + \"/info.json\";\n    infoJsonAnchor.href = infoJsonUrl;\n    infoJsonAnchor.innerText = infoJsonUrl;        \n    loadImage(imageServiceId).then(infoResponse => {\n        if(infoResponse){\n            if(infoResponse.degraded || infoResponse.status === 401){\n                doAuthChain(infoResponse);\n            }\n        }\n    });\n}\n\nfunction populateSourceList(sources){\n    let sourceList = document.getElementById(\"sourceList\");\n    sources.forEach(image => {\n        let opt = document.createElement(\"option\");\n        opt.value = image.id;\n        opt.innerText = image.label;\n        sourceList.appendChild(opt);\n    });\n    sourceList.style.display = \"block\";    \n    sourceList.addEventListener(\"change\", () => {\n        selectImage(sourceList.options[sourceList.selectedIndex].value);\n    });\n    let reloadButton = document.getElementById(\"reloadSource\");\n    reloadButton.style.display = \"block\";    \n    reloadButton.addEventListener(\"click\", () => {\n        selectImage(sourceList.options[sourceList.selectedIndex].value);\n    }); \n\n}\n\n\n// load a set of sample images from an instance of iiif-auth-server\nfunction loadSourceList(sourcesUrl){\n    return new Promise((resolve, reject) => {\n        const request = new XMLHttpRequest();\n        request.open('GET', sourcesUrl);\n        request.onload = function(){\n            try {\n                if(this.status === 200){\n                    resolve(JSON.parse(this.response));\n                } else {\n                    reject(this.status + \" \" + this.statusText);\n                } \n            } catch(e) {\n                reject(e.message);\n            }\n        };\n        request.onerror = function() {\n            reject(this.status + \" \" + this.statusText);\n        };        \n        request.send();\n    });\n}\n\nasync function loadImage(imageServiceId, token){\n    let infoResponse;\n    try{\n        infoResponse = await loadInfo(imageServiceId, token);\n    } catch (e) {\n        log(\"Could not load \" + imageServiceId);\n        log(e);\n    }\n    if(infoResponse && infoResponse.status === 200){\n        renderImage(infoResponse.info);\n        if(infoResponse.info[\"@id\"] != imageServiceId){\n            log(\"The requested imageService is \" + imageServiceId);\n            log(\"The @id returned is \" + infoResponse.info[\"@id\"]);\n            log(\"This image is most likely the degraded version of the one you asked for\")\n            infoResponse.degraded = true;\n        }\n    }\n    return infoResponse;\n}\n\n\nfunction renderImage(info){\n    log(\"OSD will load \" + info[\"@id\"]);\n    if(viewer){\n        viewer.destroy();\n        viewer = null;\n    }\n    viewer = OpenSeadragon({\n        id: \"viewer\",\n        prefixUrl: \"openseadragon/images/\",\n        tileSources: info\n    });\n}\n\nfunction asArray(obj){\n    // wrap in array if singleton\n    if(obj){\n        return (obj.constructor === Array ? obj : [obj]);\n    }\n    return [];\n}\n\nfunction first(objOrArray, predicate){\n    let arr = asArray(objOrArray);\n    let filtered = arr.filter(predicate);\n    if(filtered.length > 0){\n        return filtered[0];\n    }\n    return null;\n}\n\nasync function attemptImageWithToken(authService, imageService){\n    log(\"attempting token interaction for \" + authService[\"@id\"]);\n    let tokenService = first(authService.service, s => s.profile === PROFILE_TOKEN);\n    if(tokenService){\n        log(\"found token service: \" + tokenService[\"@id\"]);\n        let tokenMessage = await openTokenService(tokenService); \n        if(tokenMessage && tokenMessage.accessToken){\n            let withTokenInfoResponse = await loadImage(imageService, tokenMessage.accessToken);\n            log(\"info request with token resulted in \" + withTokenInfoResponse.status);\n            if(withTokenInfoResponse.status == 200){\n                renderImage(withTokenInfoResponse.info);\n                return true;\n            }\n        }  \n    }\n    log(\"Didn't get a 200 info response.\")\n    return false;\n}\n\nasync function doAuthChain(infoResponse){\n    // This function enters the flowchart at the < External? > junction\n    // http://iiif.io/api/auth/1.0/#workflow-from-the-browser-client-perspective\n    if(!infoResponse.info.service){\n        log(\"No services found\")\n        return;\n    }\n    let services = asArray(infoResponse.info.service);\n    let lastAttempted = null;\n    let requestedId = infoResponse.requestedId;\n\n    // repetition of logic is left in these steps for clarity:\n    \n    log(\"Looking for external pattern\");\n    let serviceToTry = first(services, s => s.profile === PROFILE_EXTERNAL);\n    if(serviceToTry){\n        lastAttempted = serviceToTry;\n        let success = await attemptImageWithToken(serviceToTry, requestedId);\n        if(success) return;\n    }\n\n    log(\"Looking for kiosk pattern\");\n    serviceToTry = first(services, s => s.profile === PROFILE_KIOSK);\n    if(serviceToTry){\n        lastAttempted = serviceToTry;\n        let kioskWindow = openContentProviderWindow(serviceToTry);\n        if(kioskWindow){\n            await userInteractionWithContentProvider(kioskWindow);\n            let success = await attemptImageWithToken(serviceToTry, requestedId);\n            if(success) return;\n        } else {\n            log(\"Could not open kiosk window\");\n        }\n    }\n\n    // The code for the next two patterns is identical (other than the profile name).\n    // The difference is in the expected behaviour of\n    //\n    //    await userInteractionWithContentProvider(contentProviderWindow);\n    // \n    // For clickthrough the opened window should close immediately having established\n    // a session, whereas for login the user might spend some time entering credentials etc.\n\n    log(\"Looking for clickthrough pattern\");\n    serviceToTry = first(services, s => s.profile === PROFILE_CLICKTHROUGH);\n    if(serviceToTry){\n        lastAttempted = serviceToTry;\n        let contentProviderWindow = await getContentProviderWindowFromModal(serviceToTry);\n        if(contentProviderWindow){\n            // should close immediately\n            await userInteractionWithContentProvider(contentProviderWindow);\n            let success = await attemptImageWithToken(serviceToTry, requestedId);\n            if(success) return;\n        } \n    }\n\n    log(\"Looking for login pattern\");\n    serviceToTry = first(services, s => s.profile === PROFILE_LOGIN);\n    if(serviceToTry){\n        lastAttempted = serviceToTry;\n        let contentProviderWindow = await getContentProviderWindowFromModal(serviceToTry);\n        if(contentProviderWindow){\n            // we expect the user to spend some time interacting\n            await userInteractionWithContentProvider(contentProviderWindow);\n            let success = await attemptImageWithToken(serviceToTry, requestedId);\n            if(success) return;\n        } \n    }\n\n    // nothing worked! Use the most recently tried service as the source of\n    // messages to show to the user.\n    showOutOfOptionsMessages(lastAttempted);\n}\n\n// determine the postMessage-style origin for a URL\nfunction getOrigin(url) {\n    let urlHolder = window.location;\n    if(url){\n        urlHolder = document.createElement('a');\n        urlHolder.href = url;\n    }\n    return urlHolder.protocol + \"//\" + urlHolder.hostname + (urlHolder.port ? ':' + urlHolder.port: '');\n}\n\nfunction* MessageIdGenerator(){\n    var messageId = 1; // don't start at 0, it's falsey\n    while(true) yield messageId++;\n}\n\nvar messageIds = MessageIdGenerator();\n\nfunction openTokenService(tokenService){\n    // use a Promise across a postMessage call. Discuss...\n    return new Promise((resolve, reject) => {\n        // if necessary, the client can decide not to trust this origin\n        const serviceOrigin = getOrigin(tokenService[\"@id\"]);\n        const messageId = messageIds.next().value;\n        messages[messageId] = { \n            \"resolve\": resolve,\n            \"reject\": reject,\n            \"serviceOrigin\": serviceOrigin\n        };\n        var tokenUrl = tokenService[\"@id\"] + \"?messageId=\" + messageId + \"&origin=\" + getOrigin();\n        document.getElementById(\"commsFrame\").src = tokenUrl;\n\n        // reject any unhandled messages after a configurable timeout\n        const postMessageTimeout = 5000;\n        setTimeout(() => {\n            if(messages[messageId]){\n                messages[messageId].reject(\n                    \"Message unhandled after \" + postMessageTimeout + \"ms, rejecting\");\n                delete messages[messageId];\n            }\n        }, postMessageTimeout);\n    });\n}\n\n// The event listener for postMessage. Needs to take care it only\n// responds to messages initiated by openTokenService(..)\n// Completes promises made in openTokenService(..)\nfunction receiveMessage(event) {    \n    log(\"event received, origin=\" + event.origin);\n    log(JSON.stringify(event.data));\n    let rejectValue = \"postMessage event received but rejected.\";\n    if(event.data.hasOwnProperty(\"messageId\")){\n        log(\"recieved message with id \" + event.data.messageId);\n        var message = messages[event.data.messageId];\n        if(message && event.origin == message.serviceOrigin)\n        {\n            // Any message with a messageId is a success\n            log(\"We trust that we triggered this message, so resolve\")\n            message.resolve(event.data);\n            delete messages[event.data.messageId];\n            return;\n        }    \n    }\n}\n\nfunction userInteractionWithContentProvider(contentProviderWindow){\n    return new Promise((resolve) => {\n        // What happens here is forever a mystery to a client application.\n        // It can but wait.\n        var poll = window.setInterval(() => {\n            if(contentProviderWindow.closed){\n                log(\"cookie service window is now closed\")\n                window.clearInterval(poll);\n                resolve();\n            }\n        }, 500);\n    });\n}\n\nfunction sanitise(s, allowHtml){\n    // Unimplemented\n    // Viewers should already have an HTML sanitiser library, for metadata etc\n    if(allowHtml){\n        // sanitise but allow permitted tags\n        return s;\n    }\n    // return text content only\n    return s;\n}\n\nfunction openContentProviderWindow(service){\n    let cookieServiceUrl = service[\"@id\"] + \"?origin=\" + getOrigin();\n    log(\"Opening content provider window: \" + cookieServiceUrl);\n    return window.open(cookieServiceUrl);\n}\n\nfunction getContentProviderWindowFromModal(service){\n    return new Promise(resolve => {\n        hideModals();\n        modal = document.getElementById(\"beforeOpenCookieServiceModal\");\n        modal.querySelector(\".close\").onclick = (ev => {\n            hideModals();\n            resolve(null);\n        });\n        modal.querySelector(\"#csConfirm\").onclick = (ev => {\n            log(\"Interacting with cookie service in new tab - \" + service[\"@id\"]);\n            let win = openContentProviderWindow(service);\n            hideModals();\n            resolve(win);\n        });\n        modal.querySelector(\"#csCancel\").onclick = (ev => {\n            hideModals();\n            resolve(null);\n        });\n        if(service.label){\n            modal.querySelector(\"#csLabel\").innerText = sanitise(service.label);\n        }\n        if(service.header){\n            modal.querySelector(\"#csHeader\").innerText = sanitise(service.header);\n        }\n        if(service.description){\n            modal.querySelector(\"#csDescription\").innerText = sanitise(service.description, true);\n        }\n        if(service.confirmLabel){\n            modal.querySelector(\"#csConfirm\").innerText = sanitise(service.confirmLabel);\n        }\n        modal.style.display = \"block\";\n    });\n}\n\nfunction showOutOfOptionsMessages(service){\n    hideModals();\n    modal = document.getElementById(\"failureModal\");\n    modal.querySelector(\".close\").onclick = (ev => hideModals());\n    modal.querySelector(\"#failureClose\").onclick = (ev => hideModals());\n    if(service.failureHeader){\n        modal.querySelector(\"#failureHeader\").innerText = sanitise(service.failureHeader);\n    }\n    if(service.failureDescription){\n        modal.querySelector(\"#failureDescription\").innerText = sanitise(service.failureDescription, true);\n    }\n    modal.style.display = \"block\";\n}\n\nfunction hideModals(){\n    let modals = document.querySelectorAll(\".modal\");\n    modals.forEach(m => {\n        m.style.display = \"none\";\n        m.querySelectorAll(\"*\").forEach(el => {\n            el.onclick = null;\n        });\n    });\n}\n\nfunction log(text) {\n    var logDiv = document.querySelector(\"#usermessages\");\n    var p = document.createElement(\"p\");\n    p.innerText = text;\n    logDiv.appendChild(p);\n    logDiv.scrollTop = logDiv.scrollHeight;\n    console.log(text);\n}\n\ninit();"]}